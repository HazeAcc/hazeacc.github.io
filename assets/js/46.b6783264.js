(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{250:function(t,e,v){"use strict";v.r(e);var a=v(1),_=Object(a.a)({},function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"javascript-es6-的其他特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javascript-es6-的其他特性","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript | ES6 的其他特性")]),t._v(" "),v("h2",{attrs:{id:"对象的迭代"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对象的迭代","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象的迭代")]),t._v(" "),v("p",[t._v("对象也支持获得 key 与 value，区别:")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th"),t._v(" "),v("th",[t._v("Map")]),t._v(" "),v("th",[t._v("Object")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("调用语法")]),t._v(" "),v("td",[t._v("map.keys()")]),t._v(" "),v("td",[t._v("Object.keys(obj)")])]),t._v(" "),v("tr",[v("td",[t._v("返回值")]),t._v(" "),v("td",[t._v("可迭代项")]),t._v(" "),v("td",[t._v("数组")])])])]),t._v(" "),v("p",[t._v("注意是 "),v("code",[t._v("Object.keys(obj)")]),t._v(" 而不是 "),v("code",[t._v("obj.keys()")]),t._v("，原因是支持用户自己编写 keys()方法的同时也可以调用自带的 Object.keys()方法。")]),t._v(" "),v("p",[v("code",[t._v("Object.keys/values/entries")]),t._v(" 会忽略 "),v("code",[t._v("Symbol")]),t._v(" 类型的属性，如果想要获得 "),v("code",[t._v("Symbol")]),t._v(" 类型的键，使用"),v("code",[t._v("Object.getOwnPropertySymbols()")]),t._v(" 会返回一个只包含 "),v("code",[t._v("Symbol")]),t._v(" 类型的键的数组；"),v("code",[t._v("Reflect.ownKeys(obj)")]),t._v(" 方法会返回所有键。")]),t._v(" "),v("br"),t._v(" "),v("p",[v("em",[t._v("TODO")])]),t._v(" "),v("h2",{attrs:{id:"可选链"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#可选链","aria-hidden":"true"}},[t._v("#")]),t._v(" 可选链 "),v("code",[t._v("?.")])]),t._v(" "),v("h2",{attrs:{id:"空值合并运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#空值合并运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 空值合并运算符 "),v("code",[t._v("??")])])])},[],!1,null,null,null);e.default=_.exports}}]);