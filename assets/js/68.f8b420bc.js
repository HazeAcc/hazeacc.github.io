(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{272:function(e,a,v){"use strict";v.r(a);var _=v(1),t=Object(_.a)({},function(){var e=this,a=e.$createElement,v=e._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"浏览器缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存","aria-hidden":"true"}},[e._v("#")]),e._v(" 浏览器缓存")]),e._v(" "),v("p",[e._v("我们都知道，缓存的存在是为了节约通信成本、减少服务器负担、提高网页的响应速度，但也导致了资源文件过时的问题，所以这方面也有相应的策略，保证缓存的作用尽可能地得到发挥。")]),e._v(" "),v("p",[e._v("浏览器缓存分为强缓存与协商缓存。简单而言，强缓存是没有过期的缓存，而协商缓存是过期了、但经过鉴定还能够继续使用的缓存。")]),e._v(" "),v("br"),e._v(" "),v("h2",{attrs:{id:"强缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#强缓存","aria-hidden":"true"}},[e._v("#")]),e._v(" 强缓存")]),e._v(" "),v("p",[e._v("HTTP 响应报文的头中可以使用 "),v("code",[e._v("Expires")]),e._v(" 与 "),v("code",[e._v("Cache-Control")]),e._v(" 两个字段来标识资源的缓存时间：")]),e._v(" "),v("ul",[v("li",[e._v("Expires 属于 HTTP/1.0 的规范，使用绝对时间的 GMT 格式字符串表示缓存失效时间。")]),e._v(" "),v("li",[e._v("Cache-Control 则来自 HTTP/1.1，使用 "),v("code",[e._v("max-age")]),e._v(" 值或者特殊值来设置缓存策略。")])]),e._v(" "),v("p",[e._v("Expires 最大的缺点就是因为其是一个绝对时间，当服务器与客户端的时间偏差较大时，会导致缓存变得混乱。")]),e._v(" "),v("br"),e._v(" "),v("p",[e._v("Cache-Control 则采用相对时间，解决了这个问题。例如：")]),e._v(" "),v("div",{staticClass:"language-http extra-class"},[v("pre",{pre:!0,attrs:{class:"language-http"}},[v("code",[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Cache-Control:")]),e._v(" max-age=3600\n")])])]),v("p",[e._v("代表着资源的有效期是3600秒，接收到资源后的3600秒内无需重新访问服务器获取该资源，直接复用该缓存即可。")]),e._v(" "),v("p",[e._v("除了设置 "),v("code",[e._v("max-age")]),e._v("，还有以下几个常用的设置值：")]),e._v(" "),v("ul",[v("li",[e._v("no-cache：不使用强缓存，但可以进行缓存协商。")]),e._v(" "),v("li",[e._v("no-store：禁止游览器缓存数据，彻底不使用缓存。")]),e._v(" "),v("li",[e._v("public：可以被所有的用户缓存，包括终端用户和 CDN 等中间代理服务器。")]),e._v(" "),v("li",[e._v("private：只能被终端用户的浏览器缓存，不允许 CDN 等中继缓存服务器对其缓存。")])]),e._v(" "),v("p",[e._v("为了兼容性，"),v("code",[e._v("Cache-Control")]),e._v(" 与 "),v("code",[e._v("Expires")]),e._v(" 可以在服务端配置同时启用，但同时启用的时候 "),v("code",[e._v("Cache-Control")]),e._v(" 的优先级更高。")]),e._v(" "),v("br"),e._v(" "),v("h2",{attrs:{id:"协商缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存","aria-hidden":"true"}},[e._v("#")]),e._v(" 协商缓存")]),e._v(" "),v("p",[e._v("所谓协商，就是浏览器对于是否要使用该资源的缓存，都会先和服务器先进行沟通。")]),e._v(" "),v("p",[e._v("在 HTTP/1.0 中，第一次响应返回的头中会带有 "),v("code",[e._v("Last-Modified")]),e._v(" 字段，用来表示资源的最后一次修改日期。")]),e._v(" "),v("p",[e._v("如在客户端的缓存过期后，客户端向服务端请求该文件时就会带上 "),v("code",[e._v("If-Modified-Since")]),e._v(" 字段，其值为之前所收到的 "),v("code",[e._v("Last-Modified")]),e._v(" 值。")]),e._v(" "),v("p",[e._v("如果服务端将其与文件进行对比后发现没有修改，则只返回 304 响应码而不携带资源，说明该资源仍然能够继续使用，从而达到节约带宽的效果。")]),e._v(" "),v("p",[e._v("但因为以下的原因，在 HTTP/1.1 中，这两个字段又有了新的版本：")]),e._v(" "),v("ul",[v("li",[e._v("有些文件会进行周期性的更改，但是他的内容并不改变，仅仅是改变了文件的最后修改时间")]),e._v(" "),v("li",[e._v("如果文件的修改频率很高，1秒钟内修改了多次，那么原本的表示法无法精确到1秒以内")]),e._v(" "),v("li",[e._v("某些服务器不能精确的得到文件的最后修改时间")])]),e._v(" "),v("p",[e._v("于是对应地，出现了 "),v("code",[e._v("ETag")]),e._v(" 与 "),v("code",[e._v("If-None-Match")]),e._v(" 字段。")]),e._v(" "),v("br"),e._v(" "),v("p",[v("code",[e._v("ETag")]),e._v(" 是文件的唯一校验码，如果文件有进行修改，那么 "),v("code",[e._v("ETag")]),e._v(" 就会发生变动。如果客户端发来的 "),v("code",[e._v("If-None-Match")]),e._v(" 值与服务端文件的 "),v("code",[e._v("ETag")]),e._v(" 比对不一致，则说明缓存已过期，需要重新发送文件。")]),e._v(" "),v("blockquote",[v("p",[e._v("HTTP 规范中并没有规定 "),v("code",[e._v("ETag")]),e._v(" 应该用什么算法来生成，比较理想的是用哈希，但是因为这样非常消耗服务器资源，所以许多服务器一般是使用 "),v("code",[e._v("Last-Modified")]),e._v(" + "),v("code",[e._v("Content-Length")]),e._v(" 的十六进制表示连在一起来表示 "),v("code",[e._v("ETag")]),e._v("。")])]),e._v(" "),v("br"),e._v(" "),v("p",[e._v("某次请求得到的示例：")]),e._v(" "),v("p",[e._v("部分请求头的字段：")]),e._v(" "),v("div",{staticClass:"language-http extra-class"},[v("pre",{pre:!0,attrs:{class:"language-http"}},[v("code",[e._v(":authority: ceynri.cn\n:method: GET\n"),v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("cache-control:")]),e._v(" max-age=0\n"),v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("if-modified-since:")]),e._v(" Mon, 13 Apr 2020 06:23:12 GMT\n"),v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("if-none-match:")]),e._v(' W/"5e940550-3a60"\n')])])]),v("p",[e._v("部分响应头的字段：")]),e._v(" "),v("div",{staticClass:"language-http extra-class"},[v("pre",{pre:!0,attrs:{class:"language-http"}},[v("code",[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("date:")]),e._v(" Tue, 14 Apr 2020 15:08:25 GMT\n"),v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("etag:")]),e._v(' W/"5e940550-3a60"\n'),v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("last-modified:")]),e._v(" Mon, 13 Apr 2020 06:23:12 GMT\n"),v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("status:")]),e._v(" 304\n")])])]),v("blockquote",[v("p",[e._v("用户使用 "),v("kbd",[e._v("F5")]),e._v(" 刷新页面时，会无视强缓存进行协商缓存的流程；如果使用 "),v("kbd",[e._v("Ctrl")]),e._v(" + "),v("kbd",[e._v("F5")]),e._v(" 强制刷新页面，则强制重新获取资源。")])]),e._v(" "),v("br")])},[],!1,null,null,null);a.default=t.exports}}]);