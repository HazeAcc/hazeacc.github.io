(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{287:function(t,s,a){"use strict";a.r(s);var e=a(1),i=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"从本地仓库上传至-github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从本地仓库上传至-github","aria-hidden":"true"}},[t._v("#")]),t._v(" 从本地仓库上传至 Github")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("初始化仓库")]),t._v(" "),a("p",[t._v("在想要创建 git 仓库的地方打开git窗口（Windows系统下 右键-Git Bash Here），输入 "),a("code",[t._v("git init")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\nInitialized empty Git repository "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /Users/michael/learngit/.git/\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git add <file>")]),t._v(" 和 "),a("code",[t._v("git commit -m <message>")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" file1.txt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" file2.txt file3.txt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add 3 files."')]),t._v("\n")])])]),a("p",[t._v("当 message 只有一个单词时可以不用引号包起来。")])]),t._v(" "),a("li",[a("p",[t._v("设置用户名与邮箱（如果没有设置的话）")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<你的GitHub用户名>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<你的GitHub注册邮箱>"')]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("生成并设置 ssh 密钥文件（如果你是第一次在这个电脑上传到github上）")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("ssh-keygen -t rsa -C "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<你的GitHub注册邮箱>"')]),t._v("\n")])])]),a("p",[t._v("遇到询问直接回车（选择默认），然后找到生成的.ssh的文件夹（应该会有输出提示其位置）中的id_rsa.pub密钥，将内容全部复制。")]),t._v(" "),a("p",[t._v("打开 Github 的 "),a("a",{attrs:{href:"https://github.com/settings/keys",target:"_blank",rel:"noopener noreferrer"}},[t._v("SSH and GPG keys"),a("OutboundLink")],1),t._v(" 页面，选择 New SSH key")]),t._v(" "),a("p",[t._v("标题任意，然后将刚刚复制的 id_rsa.pub 内容粘贴进去，最后点击Add SSH key。")]),t._v(" "),a("p",[t._v("可以在 .ssh 文件夹 Git Bash 中检测 GitHub 公钥设置是否成功，输入 "),a("code",[t._v("ssh git@github.com")])]),t._v(" "),a("blockquote",[a("p",[t._v("设置GitHub密钥原因：")]),t._v(" "),a("p",[t._v("通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。")])])]),t._v(" "),a("li",[a("p",[t._v("在 Github 上创建仓库")]),t._v(" "),a("p",[t._v("根据指示输入指令：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/09/08/IYie7NqmvhF1Wjc.jpg",alt:"github-new-repo"}})]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定远程仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin https://github.com/HazeAcc/tmp-repo.git\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# push到远程仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master\n")])])]),a("p",[t._v("其中第一行的url换成你对应的url即可。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git push")])]),t._v(" "),a("p",[t._v("以后上传文件无需再使用 "),a("code",[t._v("git push -u origin master")]),t._v("，因为 "),a("code",[t._v("-u")]),t._v(" 参数已经指定了 "),a("code",[t._v("origin")]),t._v(" 作为默认远程仓库，在没有其他分支的情况下，直接使用 "),a("code",[t._v("git push")]),t._v(" 指令即可完成远程仓库与本地仓库的同步。")])])]),t._v(" "),a("h2",{attrs:{id:"常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("如果远程仓库已经有了文件怎么办？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/09/08/x2v7yieZUNnHYC1.jpg",alt:"仓库已初始化"}})]),t._v(" "),a("p",[t._v("原因：")]),t._v(" "),a("p",[t._v("远程库存在文件，需要先 "),a("code",[t._v("pull")]),t._v(" 下来。")]),t._v(" "),a("p",[t._v("解决方法：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master --allow-unrelated-histories\n")])])]),a("p",[t._v("然后在 vim 编辑器模式下编写完 commit 信息后保存即可重新 push。")]),t._v(" "),a("p",[t._v("另：如果你确认远程仓库里的文件都不需要或者可以被本地文件替代，可以在 push 时添加 "),a("code",[t._v("-f")]),t._v(" 或 "),a("code",[t._v("--force")]),t._v(" 参数，会强制覆盖远程仓库的文件。但这是一个需要谨慎使用的参数，特别是在团队合作中。")])])])])},[],!1,null,null,null);s.default=i.exports}}]);